@let($$props = Object.assign($context, $props))
@let(id = $$props.id)
@let(name = $$props.name)
@let(type = $$props.type ?? 'text')
@let(value = (name ? old(name, $props.value) : $props.value) ?? '')
@let(baseClasses = 'py-3 px-4 block w-full border border-gray-200 rounded text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none')

<div x-data="{ type: {{ js.stringify(type) }} }" class="relative">
  <input
    :type="type"
    id="{{ id }}"
    name="{{ name }}"
    value="{{ value }}"
    aria-describedby="{{ id }}-error"
    {{ $props.except(['value', 'name', 'error']).merge({ class: baseClasses }).toAttrs() }}
  />

  {{-- error icon --}}
  @if ($$props.errors)
    <div class="absolute top-0 right-0 h-full flex items-center pointer-events-none {{ type === 'password' ? 'pr-8' : 'pr-3' }}">
      @!svg('ph:exclamation-mark-fill', { class: 'size-5 text-red-500' })
    </div>
  @endif

  {{-- password visibility toggle --}}
  @if (type === 'password')
    <button
      type="button"
      class="text-gray-500 hover:text-gray-700 absolute top-0 right-0 h-full flex items-center pr-3"
      @click.prevent="type = type === 'password' ? 'text' : 'password'"
    >
      <template x-if="type === 'password'">
        @!svg('ph:eye')
      </template>
      <template x-if="type === 'text'">
        @!svg('ph:eye-slash')
      </template>
    </button>
  @endif
</div>
